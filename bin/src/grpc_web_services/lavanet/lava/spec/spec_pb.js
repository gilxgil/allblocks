/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
var lavanet_lava_spec_api_collection_pb = require('../../../lavanet/lava/spec/api_collection_pb.js');
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js');
goog.exportSymbol('proto.lavanet.lava.spec.Spec', null, global);
goog.exportSymbol('proto.lavanet.lava.spec.Spec.ProvidersTypes', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lavanet.lava.spec.Spec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lavanet.lava.spec.Spec.repeatedFields_, null);
};
goog.inherits(proto.lavanet.lava.spec.Spec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.lavanet.lava.spec.Spec.displayName = 'proto.lavanet.lava.spec.Spec';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lavanet.lava.spec.Spec.repeatedFields_ = [15,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lavanet.lava.spec.Spec.prototype.toObject = function(opt_includeInstance) {
  return proto.lavanet.lava.spec.Spec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lavanet.lava.spec.Spec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lavanet.lava.spec.Spec.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    enabled: jspb.Message.getFieldWithDefault(msg, 4, false),
    reliabilityThreshold: jspb.Message.getFieldWithDefault(msg, 5, 0),
    dataReliabilityEnabled: jspb.Message.getFieldWithDefault(msg, 6, false),
    blockDistanceForFinalizedData: jspb.Message.getFieldWithDefault(msg, 7, 0),
    blocksInFinalizationProof: jspb.Message.getFieldWithDefault(msg, 8, 0),
    averageBlockTime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    allowedBlockLagForQosSync: jspb.Message.getFieldWithDefault(msg, 10, 0),
    blockLastUpdated: jspb.Message.getFieldWithDefault(msg, 11, 0),
    minStakeProvider: (f = msg.getMinStakeProvider()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f),
    minStakeClient: (f = msg.getMinStakeClient()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f),
    providersTypes: jspb.Message.getFieldWithDefault(msg, 14, 0),
    importsList: jspb.Message.getRepeatedField(msg, 15),
    apiCollectionsList: jspb.Message.toObjectList(msg.getApiCollectionsList(),
    lavanet_lava_spec_api_collection_pb.ApiCollection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lavanet.lava.spec.Spec}
 */
proto.lavanet.lava.spec.Spec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lavanet.lava.spec.Spec;
  return proto.lavanet.lava.spec.Spec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lavanet.lava.spec.Spec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lavanet.lava.spec.Spec}
 */
proto.lavanet.lava.spec.Spec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReliabilityThreshold(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDataReliabilityEnabled(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockDistanceForFinalizedData(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlocksInFinalizationProof(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAverageBlockTime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAllowedBlockLagForQosSync(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockLastUpdated(value);
      break;
    case 12:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setMinStakeProvider(value);
      break;
    case 13:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setMinStakeClient(value);
      break;
    case 14:
      var value = /** @type {!proto.lavanet.lava.spec.Spec.ProvidersTypes} */ (reader.readEnum());
      msg.setProvidersTypes(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addImports(value);
      break;
    case 16:
      var value = new lavanet_lava_spec_api_collection_pb.ApiCollection;
      reader.readMessage(value,lavanet_lava_spec_api_collection_pb.ApiCollection.deserializeBinaryFromReader);
      msg.addApiCollections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lavanet.lava.spec.Spec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lavanet.lava.spec.Spec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lavanet.lava.spec.Spec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lavanet.lava.spec.Spec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getReliabilityThreshold();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getDataReliabilityEnabled();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getBlockDistanceForFinalizedData();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getBlocksInFinalizationProof();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getAverageBlockTime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getAllowedBlockLagForQosSync();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getBlockLastUpdated();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getMinStakeProvider();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getMinStakeClient();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getProvidersTypes();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getImportsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getApiCollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      lavanet_lava_spec_api_collection_pb.ApiCollection.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.lavanet.lava.spec.Spec.ProvidersTypes = {
  DYNAMIC: 0,
  STATIC: 1
};

/**
 * optional string index = 1;
 * @return {string}
 */
proto.lavanet.lava.spec.Spec.prototype.getIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.lavanet.lava.spec.Spec.prototype.setIndex = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.lavanet.lava.spec.Spec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.lavanet.lava.spec.Spec.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool enabled = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.lavanet.lava.spec.Spec.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.lavanet.lava.spec.Spec.prototype.setEnabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 reliability_threshold = 5;
 * @return {number}
 */
proto.lavanet.lava.spec.Spec.prototype.getReliabilityThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.lavanet.lava.spec.Spec.prototype.setReliabilityThreshold = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool data_reliability_enabled = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.lavanet.lava.spec.Spec.prototype.getDataReliabilityEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.lavanet.lava.spec.Spec.prototype.setDataReliabilityEnabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional uint32 block_distance_for_finalized_data = 7;
 * @return {number}
 */
proto.lavanet.lava.spec.Spec.prototype.getBlockDistanceForFinalizedData = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.lavanet.lava.spec.Spec.prototype.setBlockDistanceForFinalizedData = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 blocks_in_finalization_proof = 8;
 * @return {number}
 */
proto.lavanet.lava.spec.Spec.prototype.getBlocksInFinalizationProof = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.lavanet.lava.spec.Spec.prototype.setBlocksInFinalizationProof = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 average_block_time = 9;
 * @return {number}
 */
proto.lavanet.lava.spec.Spec.prototype.getAverageBlockTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.lavanet.lava.spec.Spec.prototype.setAverageBlockTime = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 allowed_block_lag_for_qos_sync = 10;
 * @return {number}
 */
proto.lavanet.lava.spec.Spec.prototype.getAllowedBlockLagForQosSync = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.lavanet.lava.spec.Spec.prototype.setAllowedBlockLagForQosSync = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 block_last_updated = 11;
 * @return {number}
 */
proto.lavanet.lava.spec.Spec.prototype.getBlockLastUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.lavanet.lava.spec.Spec.prototype.setBlockLastUpdated = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional cosmos.base.v1beta1.Coin min_stake_provider = 12;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.lavanet.lava.spec.Spec.prototype.getMinStakeProvider = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 12));
};


/** @param {?proto.cosmos.base.v1beta1.Coin|undefined} value */
proto.lavanet.lava.spec.Spec.prototype.setMinStakeProvider = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.lavanet.lava.spec.Spec.prototype.clearMinStakeProvider = function() {
  this.setMinStakeProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.lavanet.lava.spec.Spec.prototype.hasMinStakeProvider = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional cosmos.base.v1beta1.Coin min_stake_client = 13;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.lavanet.lava.spec.Spec.prototype.getMinStakeClient = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 13));
};


/** @param {?proto.cosmos.base.v1beta1.Coin|undefined} value */
proto.lavanet.lava.spec.Spec.prototype.setMinStakeClient = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.lavanet.lava.spec.Spec.prototype.clearMinStakeClient = function() {
  this.setMinStakeClient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.lavanet.lava.spec.Spec.prototype.hasMinStakeClient = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ProvidersTypes providers_types = 14;
 * @return {!proto.lavanet.lava.spec.Spec.ProvidersTypes}
 */
proto.lavanet.lava.spec.Spec.prototype.getProvidersTypes = function() {
  return /** @type {!proto.lavanet.lava.spec.Spec.ProvidersTypes} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {!proto.lavanet.lava.spec.Spec.ProvidersTypes} value */
proto.lavanet.lava.spec.Spec.prototype.setProvidersTypes = function(value) {
  jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * repeated string imports = 15;
 * @return {!Array<string>}
 */
proto.lavanet.lava.spec.Spec.prototype.getImportsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/** @param {!Array<string>} value */
proto.lavanet.lava.spec.Spec.prototype.setImportsList = function(value) {
  jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.lavanet.lava.spec.Spec.prototype.addImports = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


proto.lavanet.lava.spec.Spec.prototype.clearImportsList = function() {
  this.setImportsList([]);
};


/**
 * repeated ApiCollection api_collections = 16;
 * @return {!Array<!proto.lavanet.lava.spec.ApiCollection>}
 */
proto.lavanet.lava.spec.Spec.prototype.getApiCollectionsList = function() {
  return /** @type{!Array<!proto.lavanet.lava.spec.ApiCollection>} */ (
    jspb.Message.getRepeatedWrapperField(this, lavanet_lava_spec_api_collection_pb.ApiCollection, 16));
};


/** @param {!Array<!proto.lavanet.lava.spec.ApiCollection>} value */
proto.lavanet.lava.spec.Spec.prototype.setApiCollectionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.lavanet.lava.spec.ApiCollection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lavanet.lava.spec.ApiCollection}
 */
proto.lavanet.lava.spec.Spec.prototype.addApiCollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.lavanet.lava.spec.ApiCollection, opt_index);
};


proto.lavanet.lava.spec.Spec.prototype.clearApiCollectionsList = function() {
  this.setApiCollectionsList([]);
};


goog.object.extend(exports, proto.lavanet.lava.spec);
